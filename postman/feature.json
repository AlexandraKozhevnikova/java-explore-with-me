{
  "info": {
    "_postman_id": "206cc061-9e92-42fa-98f5-e606c2b5ccfc",
    "name": "Учет оплат участия в мероприятии",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "26308714"
  },
  "item": [
    {
      "name": "Служебная",
      "item": [
        {
          "name": "Получить OpenAPI Specification (OAS)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/v3/api-docs",
              "protocol": "http",
              "host": [
                "localhost"
              ],
              "port": "8080",
              "path": [
                "v3",
                "api-docs"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Создание счета на оплату",
      "item": [
        {
          "name": "Тесты на валидацию запроса",
          "item": [
            {
              "name": "Не передан eventId",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/bills?eventId=1",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "bills"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "1"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "eventId не число",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/bills?eventId=1",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "bills"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "1"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "userId не число",
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/bills?eventId=1",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "bills"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "1"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Создание бесплатного события с указанной суммой",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test(\"Id object\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"Object: newEventRequest. Error: 'amount' is possible only for paid events. Value: 'paid' and 'amount'\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"annotation\": \"Сплав на байдарках похож на полет.\",\n  \"category\": 1,\n  \"description\": \"Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления.\",\n  \"eventDate\": \"2024-12-31 15:10:05\",\n  \"location\": {\n    \"lat\": 55.754167,\n    \"lon\": 37.62\n  },\n  \"title\": \"Сплав на байдарках\",\n  \"paid\": false,\n  \"participantLimit\": 1000,\n  \"requestModeration\": true,\n  \"amount\" : {\n      \"total\": 110.20,\n      \"currency\": \"RUB\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/events",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "events"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "1",
                      "description": "(Required) id текущего пользователя"
                    }
                  ]
                },
                "description": "Обратите внимание: дата и время на которые намечено событие не может быть раньше, чем через два часа от текущего момента"
              },
              "response": []
            }
          ]
        },
        {
          "name": "Интеграционные тесты",
          "item": [
            {
              "name": "1(case number) - Юзера не существует",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test(\"Error message\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"User with id=1 was not found\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/bills?eventId=1",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "bills"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "1"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Test Data  - Добавление пользователя:1 (инициатор)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"Id object\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.id).to.eql(1);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"ivan2.petr1ov@pra{{$randomAlphaNumeric}}cticummail.ru\",\n  \"name\": \"Иван Петров (инициатор)\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/admin/users",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "users"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "2 -  Cобытия не существует",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test(\"Error message\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"Event with id=1 was not found\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/bills?eventId=1",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "bills"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "1"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TD - Добавление    категории:1",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"Id object\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.id).to.eql(1);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \" {{$randomLoremSentence}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/admin/categories",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "categories"
                  ]
                },
                "description": "Обратите внимание: имя категории должно быть уникальным"
              },
              "response": []
            },
            {
              "name": "TD - Добавление события:1 бесплатного",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"Id object\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.id).to.eql(1);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"annotation\": \"Сплав на байдарках похож на полет.\",\n  \"category\": 1,\n  \"description\": \"Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления.\",\n  \"eventDate\": \"2024-12-31 15:10:05\",\n  \"location\": {\n    \"lat\": 55.754167,\n    \"lon\": 37.62\n  },\n  \"title\": \"Сплав на байдарках\",\n  \"paid\":  false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/events",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "events"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "1",
                      "description": "(Required) id текущего пользователя"
                    }
                  ]
                },
                "description": "Обратите внимание: дата и время на которые намечено событие не может быть раньше, чем через два часа от текущего момента"
              },
              "response": []
            },
            {
              "name": "TD - Добавление пользователья:2 (участник)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"Id object\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.id).to.eql(2);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"ivan2.petr1ov@pra{{$randomAlphaNumeric}}cticummail.ru\",\n  \"name\": \"Оля Иванова (участник)\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/admin/users",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "users"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "2a -  Cобытия с признаком платное - ложь",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {",
                      "    pm.response.to.have.status(409);",
                      "});",
                      "",
                      "pm.test(\"Error message\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"Нельзя выставить счет на бесплатное мероприятие, у платного мероприятия должна быть стоимость\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/bills?eventId=1",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "bills"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "1"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TD - Добавление события:2 от user:1 платного но без стоимости",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"Id object\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.id).to.eql(2);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"annotation\": \"Сплав на байдарках похож на полет.\",\n  \"category\": 1,\n  \"description\": \"Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления.\",\n  \"eventDate\": \"2024-12-31 15:10:05\",\n  \"location\": {\n    \"lat\": 55.754167,\n    \"lon\": 37.62\n  },\n  \"title\": \"Сплав на байдарках\",\n  \"paid\": true,\n  \"participantLimit\": 1000,\n  \"requestModeration\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/events",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "events"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "1",
                      "description": "(Required) id текущего пользователя"
                    }
                  ]
                },
                "description": "Обратите внимание: дата и время на которые намечено событие не может быть раньше, чем через два часа от текущего момента"
              },
              "response": []
            },
            {
              "name": "2b -  Cобытие без указанной стоимости",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {",
                      "    pm.response.to.have.status(409);",
                      "});",
                      "",
                      "pm.test(\"Error message\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"Нельзя выставить счет на бесплатное мероприятие, у платного мероприятия должна быть стоимость\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/bills?eventId=2",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "bills"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "2"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TD - Добавление события:3 от user:1 платного  со стоимостью",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"Id object\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.id).to.eql(3);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"annotation\": \"Сплав на байдарках похож на полет.\",\n  \"category\": 1,\n  \"description\": \"Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления.\",\n  \"eventDate\": \"2024-12-31 15:10:05\",\n  \"location\": {\n    \"lat\": 55.754167,\n    \"lon\": 37.62\n  },\n  \"title\": \"Сплав на байдарках\",\n  \"paid\": true,\n  \"participantLimit\": 1000,\n  \"requestModeration\": true,\n  \"amount\": {\n      \"total\": 120.11,\n      \"currency\": \"RUB\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/events",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "events"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "1",
                      "description": "(Required) id текущего пользователя"
                    }
                  ]
                },
                "description": "Обратите внимание: дата и время на которые намечено событие не может быть раньше, чем через два часа от текущего момента"
              },
              "response": []
            },
            {
              "name": "3 -  Нет реквеста на участие в евенте",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {",
                      "    pm.response.to.have.status(409);",
                      "});",
                      "",
                      "pm.test(\"Error message\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"Отсутствует подтвержденный запрос от участника\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/bills?eventId=3",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "bills"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "3"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TD - Публикация события:3",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Id object\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.id).to.eql(3);",
                      "});",
                      "",
                      "pm.test(\"state\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.state).to.eql(\"PUBLISHED\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"stateAction\": \"PUBLISH_EVENT\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/admin/events/:eventId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "events",
                    ":eventId"
                  ],
                  "variable": [
                    {
                      "key": "eventId",
                      "value": "3",
                      "description": "(Required) id события"
                    }
                  ]
                },
                "description": "Редактирование данных любого события администратором. Валидация данных не требуется.\nОбратите внимание:\n - дата начала изменяемого события должна быть не ранее чем за час от даты публикации. (Ожидается код ошибки 409)\n- событие можно публиковать, только если оно в состоянии ожидания публикации (Ожидается код ошибки 409)\n- событие можно отклонить, только если оно еще не опубликовано (Ожидается код ошибки 409)"
              },
              "response": []
            },
            {
              "name": "TD - Добавление запроса:1 от юзера:2 на участие в событии:3",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"Id object\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.id).to.eql(1);",
                      "});",
                      "",
                      "pm.test(\"state\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.status).to.eql(\"PENDING\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/requests?eventId=3",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "requests"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "3",
                      "description": "(Required) id события"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2",
                      "description": "(Required) id текущего пользователя"
                    }
                  ]
                },
                "description": "Обратите внимание:\n- нельзя добавить повторный запрос  (Ожидается код ошибки 409)\n- инициатор события не может добавить запрос на участие в своём событии (Ожидается код ошибки 409)\n- нельзя участвовать в неопубликованном событии (Ожидается код ошибки 409)\n- если у события достигнут лимит запросов на участие - необходимо вернуть ошибку  (Ожидается код ошибки 409)\n- если для события отключена пре-модерация запросов на участие, то запрос должен автоматически перейти в состояние подтвержденного"
              },
              "response": []
            },
            {
              "name": "3а -  Нет реквеста в статусе Подтверждено",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 409\", function () {",
                      "    pm.response.to.have.status(409);",
                      "});",
                      "",
                      "pm.test(\"Error message\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.message).to.eql(\"Отсутствует подтвержденный запрос от участника\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/bills?eventId=3",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "bills"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "3"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "TD -  подтвержднеие заявки на участие:1",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Id object\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.confirmedRequests[0].id).to.eql(1);",
                      "});",
                      "",
                      "pm.test(\"state\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.confirmedRequests[0].status).to.eql(\"CONFIRMED\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"requestIds\": [\n    1\n  ],\n  \"status\": \"CONFIRMED\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/events/:eventId/requests",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "events",
                    ":eventId",
                    "requests"
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "1"
                    },
                    {
                      "key": "eventId",
                      "value": "3"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "4 Успех",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\" body\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.state).to.eql(\"CREATED\");",
                      "   pm.expect(jsonData.event.amount.total).to.eql(120.11);",
                      "",
                      "});",
                      "",
                      "//cохраняем время создания счета чтобы потом проверить что вернулся тот же счет",
                      "pm.collectionVariables.set(\"time_create_bill_1\", pm.response.json().createdOn);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/bills?eventId=3",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "bills"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "3"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "5 Повторное добавление счета сразу",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\" body\", function () {",
                      "    var jsonData = pm.response.json();",
                      "      pm.expect(jsonData.state).to.eql(\"CREATED\");",
                      "      pm.expect(jsonData.event.amount.total).to.eql(120.11);",
                      "      pm.expect(jsonData.id).to.eql(1);",
                      "        pm.expect(jsonData.createdOn).to.eql(pm.collectionVariables.get(\"time_create_bill_1\"));",
                      "",
                      "",
                      "});",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/bills?eventId=3",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "bills"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "3"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "6 Повторное добавление счета через минуту",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\" body\", function () {",
                      "    var jsonData = pm.response.json();",
                      "      pm.expect(jsonData.state).to.eql(\"CREATED\");",
                      "      pm.expect(jsonData.event.amount.total).to.eql(120.11);",
                      "      pm.expect(jsonData.id).to.eql(2);",
                      "        pm.expect(jsonData.createdOn).to.not.eql(pm.collectionVariables.get(\"time_create_bill_1\"));",
                      "",
                      "",
                      "});",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){}, 60000);",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/users/:userId/bills?eventId=3",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "users",
                    ":userId",
                    "bills"
                  ],
                  "query": [
                    {
                      "key": "eventId",
                      "value": "3"
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "2"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "Оплата счета",
      "item": [
        {
          "name": "Оплата протухшего счета",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\" body\", function () {",
                  "    var jsonData = pm.response.json();",
                  "      pm.expect(jsonData.state).to.eql(\"CREATED\");",
                  "      pm.expect(jsonData.event.amount.total).to.eql(120.11);",
                  "      pm.expect(jsonData.id).to.eql(2);",
                  "        pm.expect(jsonData.createdOn).to.not.eql(pm.collectionVariables.get(\"time_create_bill_1\"));",
                  "",
                  "",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/bills/:billId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "bills",
                ":billId"
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "2"
                },
                {
                  "key": "billId",
                  "value": "1"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Оплата  чужого счета",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\" body\", function () {",
                  "    var jsonData = pm.response.json();",
                  "      pm.expect(jsonData.state).to.eql(\"CREATED\");",
                  "      pm.expect(jsonData.event.amount.total).to.eql(120.11);",
                  "      pm.expect(jsonData.id).to.eql(2);",
                  "        pm.expect(jsonData.createdOn).to.not.eql(pm.collectionVariables.get(\"time_create_bill_1\"));",
                  "",
                  "",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/bills?billId=31",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "bills"
              ],
              "query": [
                {
                  "key": "billId",
                  "value": "31"
                }
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "TD - Выставление счета на оплату",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\" body\", function () {",
                  "    var jsonData = pm.response.json();",
                  "      pm.expect(jsonData.state).to.eql(\"CREATED\");",
                  "      pm.expect(jsonData.event.amount.total).to.eql(120.11);",
                  "      pm.expect(jsonData.id).to.eql(2);",
                  "        pm.expect(jsonData.createdOn).to.not.eql(pm.collectionVariables.get(\"time_create_bill_1\"));",
                  "",
                  "",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/bills?eventId=3",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "bills"
              ],
              "query": [
                {
                  "key": "eventId",
                  "value": "3"
                }
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Успешная оплата",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\" body\", function () {",
                  "    var jsonData = pm.response.json();",
                  "      pm.expect(jsonData.state).to.eql(\"CREATED\");",
                  "      pm.expect(jsonData.event.amount.total).to.eql(120.11);",
                  "      pm.expect(jsonData.id).to.eql(2);",
                  "        pm.expect(jsonData.createdOn).to.not.eql(pm.collectionVariables.get(\"time_create_bill_1\"));",
                  "",
                  "",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/bills?billId=31",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "bills"
              ],
              "query": [
                {
                  "key": "billId",
                  "value": "31"
                }
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Оплата  оплаченного счета Copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\" body\", function () {",
                  "    var jsonData = pm.response.json();",
                  "      pm.expect(jsonData.state).to.eql(\"CREATED\");",
                  "      pm.expect(jsonData.event.amount.total).to.eql(120.11);",
                  "      pm.expect(jsonData.id).to.eql(2);",
                  "        pm.expect(jsonData.createdOn).to.not.eql(pm.collectionVariables.get(\"time_create_bill_1\"));",
                  "",
                  "",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/:userId/bills?billId=31",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                ":userId",
                "bills"
              ],
              "query": [
                {
                  "key": "billId",
                  "value": "31"
                }
              ],
              "variable": [
                {
                  "key": "userId",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "time_create_bill_1",
      "value": ""
    }
  ]
}